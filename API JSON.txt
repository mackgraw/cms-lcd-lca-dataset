{
  "openapi": "3.0.3",
  "info": {
    "title": "Coverage API",
    "description": "This API supports the National and Local Coverage applications, including the Medicare Coverage Database (MCD). Please refer to the MCD data dictionaries for all field descriptions: [MCD Data Dictionary Downloads](https://www.cms.gov/medicare-coverage-database/downloads/downloads.aspx). API Keys are not required to access the endpoints. If you would like to sign up to receive updates on our API development, please go here [https://qualitynet.cms.gov/listserv-signup](https://qualitynet.cms.gov/listserv-signup) and enter your email address.",
    "version": "1.5"
  },
  "externalDocs": {
    "description": "Coming soon",
    "url": ""
  },
  "tags": [
    {
      "name": "data",
      "description": "Endpoints for standard data entities, such as LCDs, articles, and contractors."
    },
    {
      "name": "metadata",
      "description": "Endpoints for metadata entities, such as properties associated with data entities."
    },
    {
      "name": "reports",
      "description": "Endpoints for summary, formatted, and/or specialized data entities."
    }
  ],
  "paths": {
    "/v1/data/article/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves all article fields that are not in a separate article endpoint.",
        "description": "Retrieves all article fields that are not in a separate article endpoint. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticle",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticle"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/future-retire": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves information indicating if an article has a planned retirement date or not.",
        "description": "Retrieves information indicating if an article has a planned retirement date or not. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleFutureRetire",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleFutureRetire"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/related-documents": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves related local coverage documents listed in an article.",
        "description": "Retrieves related local coverage documents listed in an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleRelatedDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleRelatedDocuments"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/related-ncd-documents": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the NCDs related to an article.",
        "description": "Retrieves the NCDs related to an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleRelatedNcdDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleRelatedNcdDocuments"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/related-source-icd9": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the original ICD-9 Document IDs for an article.",
        "description": "Retrieves the original ICD-9 Document IDs for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleRelatedSourceIcd9",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleRelatedSourceIcd9"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/bill-codes": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the bill codes for an article.",
        "description": "Retrieves the bill codes for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleBillCodes",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleBillCodes"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/code-table": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the SAD Exclusion code table for a SAD article.",
        "description": "Retrieves the SAD Exclusion code table for a Self-Administered Drug (SAD) Exclusion List article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleCodeTable",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleCodeTable"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/contractor": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the contractor information for an article.",
        "description": "Retrieves the contractor information for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleContractor",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleContractor"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/hcpc-code": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the CPT/HCPCS codes for an article.",
        "description": "Retrieves the CPT/HCPCS codes for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleHcpcCode",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleHcpcCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/hcpc-code-group": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the paragraph text for the CPT/HCPCS code groups for an article.",
        "description": "Retrieves the paragraph text for the CPT/HCPCS code groups for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleHcpcCodeGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleHcpcCodeGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/hcpc-modifier": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the CPT/HCPCS modifier codes for an article.",
        "description": "Retrieves the CPT/HCPCS modifier codes for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleHcpcModifier",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleHcpcModifier"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/hcpc-modifier-group": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the paragraph text for the CPT/HCPCS Modifier code groups for an article.",
        "description": "Retrieves the paragraph text for the CPT/HCPCS Modifier code groups for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleHcpcModifierGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleHcpcModifierGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/icd10-covered": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the ICD-10 codes that support medical necessity for an article.",
        "description": "Retrieves the ICD-10 codes that support medical necessity for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleIcd10Covered",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleIcd10Covered"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/icd10-covered-group": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the paragraph text for ICD-10 code groups that support medical necessity for an article.",
        "description": "RetrievesRetrieves the paragraph text for ICD-10 code groups that support medical necessity for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleIcd10CoveredGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleIcd10CoveredGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/icd10-noncovered": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the ICD-10 Codes that do not support medical necessity for an article.",
        "description": "Retrieves the ICD-10 Codes that do not support medical necessity for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleIcd10Noncovered",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleIcd10Noncovered"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/icd10-noncovered-group": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the paragraph text for ICD-10 code groups that do not support medical necessity for an article.",
        "description": "Retrieves the paragraph text for ICD-10 code groups that do not support medical necessity for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleIcd10NoncoveredGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleIcd10NoncoveredGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/icd10-pcs-code": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the ICD-10 PCS codes for an article.",
        "description": "Retrieves the ICD-10 PCS codes for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleIcd10PcsCode",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleIcd10PcsCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/icd10-pcs-code-group": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the paragraph text for the ICD-10 PCS code groups for an article.",
        "description": "Retrieves the paragraph text for the ICD-10 PCS code groups for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleIcd10PcsCodeGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleIcd10PcsCodeGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/other-coding-group": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the data in the Other Coding Information section for an article.",
        "description": "Retrieves the data in the Other Coding Information section for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleOtherCodingGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleOtherCodingGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/primary-jurisdiction": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the Primary Jurisdiction for an article.",
        "description": "Retrieves the Primary Jurisdiction for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned. <br/><br/> Important! If the article version has more than one row in the ARTICLE_X_CONTRACTOR table, use the CONTRACTOR_JURISDICTION table. However, if it only has one row (i.e., the article is only associated to one contract number), then use the ARTICLE_X_PRIMARY_JURISDICTION table.",
        "operationId": "getDataArticlePrimaryJurisdiction",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticlePrimaryJurisdiction"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/response-comment": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the Response to Comments section for an article.",
        "description": "Retrieves the Response to Comments section for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleResponseComment",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleResponseComment"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/revenue-code": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the revenue codes for an article.",
        "description": "Retrieves the revenue codes for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleRevenueCode",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleRevenueCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/revision-history": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the revision history for an article.",
        "description": "Retrieves the revision history for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleRevisionHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleRevisionHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/sticky-note": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the sticky notes for an article.",
        "description": "Retrieves the sticky notes for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleStickyNote",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleStickyNote"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/article/urls": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the associated URLs for an article.",
        "description": "Retrieves the associated URLs for an article. The Article ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataArticleUrls",
        "parameters": [
          {
            "$ref": "#/components/parameters/articleid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataArticleUrls"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },

    "/v1/data/cal/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves CAL information.",
        "description": "Retrieves all core fields for CALs. You must specify an CAL Id.",
        "operationId": "getDataCal",
        "parameters": [
          {
            "$ref": "#/components/parameters/calid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataCal"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/cal/tracking-sheet": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves CAL tracking sheet.",
        "description": "Retrieves the CAL tracking sheet. You must specify an CAL Id.",
        "operationId": "getDataCalTrackingSheet",
        "parameters": [
          {
            "$ref": "#/components/parameters/calid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataCalTrackingSheet"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/cal/related-ncd": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves CAL related NCDs.",
        "description": "Retrieves the CAL's related NCDs. You must specify an cal Id.",
        "operationId": "getDataCalRelatedNcd",
        "parameters": [
          {
            "$ref": "#/components/parameters/calid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataCalRelatedNcd"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/cal/related-ta": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves CAL related TAs.",
        "description": "Retrieves the CALs related TA. You must specify an CAL Id.",
        "operationId": "getDataCalRelatedTa",
        "parameters": [
          {
            "$ref": "#/components/parameters/calid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataCalRelatedTa"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/cal/related-medcac": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the CAL related MEDCAC.",
        "description": "Retrieves the CALs related MEDCAC. You must specify an CAL Id.",
        "operationId": "getDataCalRelatedMedCac",
        "parameters": [
          {
            "$ref": "#/components/parameters/calid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataCalRelatedMedCac"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/cal/history": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves CAL history.",
        "description": "Retrieves the CAL history of considerations. You must specify an CAL Id.",
        "operationId": "getDataCalHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncaid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataCalHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/cal/related-comments": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves CAL related comments.",
        "description": "Retrieves the public comments for an CAL. You must specify an CAL Id.",
        "operationId": "getDataCalRelatedComments",
        "parameters": [
          {
            "$ref": "#/components/parameters/calid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataCalRelatedComments"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },

    "/v1/data/contractor/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves contractor information.",
        "description": "Retrieves all core fields for contractors. Not specifying contractor_id will return all contractors. Not specifying contractor_version will return all versions for a contractor_id.",
        "operationId": "getDataContractor",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractor_id"
          },
          {
            "$ref": "#/components/parameters/contractor_version"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataContractor"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },

    "/v1/data/lcd/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves all LCD fields that are not in a separate LCD endpoint.",
        "description": "Retrieves all LCD fields that are not in a separate LCD endpoint. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcd",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcd"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/related-documents": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves related local coverage documents listed in an LCD. ",
        "description": "Retrieves related local coverage documents listed in an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdRelatedDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdRelatedDocuments"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/related-ncd-documents": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the NCDs related to an LCD.",
        "description": "Retrieves the NCDs related to an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdRelatedNcdDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdRelatedNcdDocuments"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/future-retire": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves information indicating if an LCD has a planned retirement date or not.",
        "description": "Retrieves information indicating if an LCD has a planned retirement date or not. The LCD ID must be provided.",
        "operationId": "getDataLcdFutureRetire",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdFutureRetire"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/related-source-icd9": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the original ICD-9 Document IDs for an LCD.",
        "description": "Retrieves the original ICD-9 Document IDs for an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdRelatedSourceIcd9",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdRelatedSourceIcd9"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/advisory-committee": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the Carrier Advisory Committee (CAC) Meetings for an LCD.",
        "description": "Retrieves the Carrier Advisory Committee (CAC) Meetings for an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdAdvisoryCommittee",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdAdvisoryCommittee"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/contractor": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the contractor information for an LCD.",
        "description": "Retrieves the contractor information for an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdContractor",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdContractor"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/hcpc-code-group": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the paragraph text for the CPT/HCPCS code group sections for an LCD.",
        "description": "Retrieves the paragraph text for the CPT/HCPCS code group sections for an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdHcpcCodeGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdHcpcCodeGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/hcpc-code": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the CPT/HCPCS codes for an LCD.",
        "description": "Retrieves the CPT/HCPCS codes for an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdHcpcCode",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdHcpcCode"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/reason-change": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the reasons for change for an LCD.",
        "description": "Retrieves the reasons for change for an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdReasonChange",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdReasonChange"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/requestor-letters": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the requestor letter information for a Proposed LCD.",
        "description": "Retrieves the requestor letter information for a Proposed LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdRequestorLetters",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdRequestorLetters"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/revision-history": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the revision history for an LCD.",
        "description": "Retrieves the revision history for an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdRevisionHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdRevisionHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/sticky-note": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the sticky notes for an LCD.",
        "description": "Retrieves the sticky notes for an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdStickyNote",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdStickyNote"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/synopsis-changes": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the synopsis of changes for an LCD.",
        "description": "Retrieves the synopsis of changes for an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdSynopsisChanges",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdSynopsisChanges"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/urls": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the MAC Meeting Information URLs for a Proposed LCD.",
        "description": "Retrieves the MAC Meeting Information URLs for a Proposed LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdUrls",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdUrls"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/primary-jurisdiction": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the Primary Jurisdiction for an LCD.",
        "description": "Retrieves the Primary Jurisdiction for an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned. <br/><br/> Important! If the LCD version has more than one row in the LCD_X_CONTRACTOR table, use the CONTRACTOR_JURISDICTION table. However, if it only has one row (i.e., the LCD is only associated to one contract), then use the LCD_X_PRIMARY_JURISDICTION table.",
        "operationId": "getDataLcdPrimaryJurisdiction",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdPrimaryJurisdiction"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/tracking-sheet": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the Tracking Sheet Information for a Proposed LCD.",
        "description": "Retrieves the Tracking Sheet Information for a Proposed LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdTrackingSheet",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdTrackingSheet"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/lcd/attachments": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the attachments for an LCD.",
        "description": "Retrieves the attachments for an LCD. The LCD ID must be provided, and optionally, a version can be specified. If no version is specified, the most recent version will be returned.",
        "operationId": "getDataLcdAttachments",
        "parameters": [
          {
            "$ref": "#/components/parameters/lcdid"
          },
          {
            "$ref": "#/components/parameters/ver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataLcdAttachments"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },

    "/v1/data/medicare-coverage-document/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves Medicare Coverage Document document information.",
        "description": "Retrieves all core fields for Medicare Coverage Documents",
        "operationId": "getDataMedCovDoc",
        "parameters": [
          {
            "$ref": "#/components/parameters/mcdid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataMedCovDoc"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/medicare-coverage-document/related-comments": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves public comments for Medicare Coverage Documents.",
        "description": "Retrieves public comments for Medicare Coverage Documents",
        "operationId": "getDataMedCovDocRelatedComments",
        "parameters": [
          {
            "$ref": "#/components/parameters/mcdid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataMedCovDocRelatedComments"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },

    "/v1/data/medcac-meeting/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves MEDCAC Meeting Information.",
        "description": "Retrieves MEDCAC Meeting Information. A MEDCAC ID must be provided",
        "operationId": "getDataMedcacMeeting",
        "parameters": [
          {
            "$ref": "#/components/parameters/medcacid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataMedcacMeeting"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/medcac-meeting/related-material": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves MEDCAC Meeting Related Material.",
        "description": "Retrieves Related material for MEDCAC Meetings. A MEDCAC ID must be provided.",
        "operationId": "getDataMedcacRelatedMaterial",
        "parameters": [
          {
            "$ref": "#/components/parameters/medcacid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataMedcacRelatedMaterial"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/medcac-meeting/related-eweb-material": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves MEDCAC Meeting Related Eweb Material.",
        "description": "Retrieves Related Eweb material for MEDCAC Meetings. A MEDCAC ID must be provided.",
        "operationId": "getDataMedcacRelatedEwebMaterial",
        "parameters": [
          {
            "$ref": "#/components/parameters/medcacid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataMedcacRelatedEwebMaterial"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/medcac-meeting/related-nca": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves MEDCAC Meeting Related NCAs.",
        "description": "Retrieves Related NCAs for MEDCAC Meetings. A MEDCAC ID must be provided.",
        "operationId": "getDataMedcacRelatedNca",
        "parameters": [
          {
            "$ref": "#/components/parameters/medcacid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataMedcacRelatedNca"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/medcac-meeting/related-ta": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves MEDCAC Meeting Related TAs.",
        "description": "Retrieves Related TAs for MEDCAC Meetings. A MEDCAC ID must be provided.",
        "operationId": "getDataMedcacRelatedTa",
        "parameters": [
          {
            "$ref": "#/components/parameters/medcacid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataMedcacRelatedTa"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },

    "/v1/data/nca/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves NCA information.",
        "description": "Retrieves all core fields for NCAs. You must specify an NCA Id.",
        "operationId": "getDataNca",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncaid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNca"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/nca/tracking-sheet": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves NCA tracking sheet.",
        "description": "Retrieves the NCA tracking sheet. You must specify an NCA Id.",
        "operationId": "getDataNcaTrackingSheet",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncaid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNcaTrackingSheet"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/nca/related-ncd": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves NCA related NCDs.",
        "description": "Retrieves the NCAs related NCDs. You must specify an NCA Id.",
        "operationId": "getDataNcaRelatedNcd",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncaid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNcaRelatedNcd"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/nca/related-ta": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves NCA related TAs.",
        "description": "Retrieves the NCAs related TA. You must specify an NCA Id.",
        "operationId": "getDataNcaRelatedTa",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncaid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNcaRelatedTa"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/nca/related-medcac": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves the NCA related MEDCAC.",
        "description": "Retrieves the NCAs related MEDCAC. You must specify an NCA Id.",
        "operationId": "getDataNcaRelatedMedCac",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncaid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNcaRelatedMedCac"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/nca/history": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves NCA history.",
        "description": "Retrieves the NCA history of considerations. You must specify an NCA Id.",
        "operationId": "getDataNcaHistory",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncaid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNcaHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/nca/related-comments": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves NCA related comments.",
        "description": "Retrieves the public comments for an NCA. You must specify an NCA Id.",
        "operationId": "getDataNcaRelatedComments",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncaid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNcaRelatedComments"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },

    "/v1/data/ncd/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves NCD information.",
        "description": "Retrieves all core fields for NCDs. Not specifying a NCD version will return the latest version. You must specify a NCD Id.",
        "operationId": "getDataNcd",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncdid"
          },
          {
            "$ref": "#/components/parameters/ncdver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNcd"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/ncd/related-ncas/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves related NCAs for a NCD.",
        "description": "Retrieves related NCAs for a NCD. You must specify a NCD Id.",
        "operationId": "getDataNcdRelatedNca",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncdid"
          },
          {
            "$ref": "#/components/parameters/ncdver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNcdRelatedNca"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/ncd/related-cals/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves related CALs for a NCD.",
        "description": "Retrieves all core fields for NCDs. Not specifying an NCD version will return the latest version. You must specify an NCD Id.",
        "operationId": "getDataNcdRelatedCal",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncdid"
          },
          {
            "$ref": "#/components/parameters/ncdver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNcdRelatedCal"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/ncd/related-cpis/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves CPIs for a NCD.",
        "description": "Retrieves Claims Processing Instructions for the NCD. Not specifying an NCD version will return the latest version. You must specify an NCD Id.",
        "operationId": "getDataNcdRelatedCpi",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncdid"
          },
          {
            "$ref": "#/components/parameters/ncdver"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNcdRelatedCpi"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/ncd/other-versions/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves other versions for the NCD.",
        "description": "Retrieves other versions for the NCDs. You must specify an NCD Id.",
        "operationId": "getDataNcdOtherVersions",
        "parameters": [
          {
            "$ref": "#/components/parameters/ncdid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataNcdOtherVersions"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },

    "/v1/data/technology-assessment/": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves TA information.",
        "description": "Retrieves detailed information for TAs across all core fields. The TA ID is required. ",
        "operationId": "getDataTechnologyAssessment",
        "parameters": [
          {
            "$ref": "#/components/parameters/taid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataTechnologyAssessment"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/technology-assessment/related-ncas": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves TA Related NCAs.",
        "description": "Retrieves NCAs related to a TA. The TA ID is required.",
        "operationId": "getDataTaRelatedNca",
        "parameters": [
          {
            "$ref": "#/components/parameters/taid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataTaRelatedNca"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/technology-assessment/related-material": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves TA Related Material.",
        "description": "Retrieves related material to a TA. The TA ID is required.",
        "operationId": "getDataTaRelatedMaterial",
        "parameters": [
          {
            "$ref": "#/components/parameters/taid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataTaRelatedMaterial"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/technology-assessment/related-web-material": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves TA Related Web Material.",
        "description": "Retrieves Web Material related to the TA. The TA ID is required.",
        "operationId": "getDataTaRelatedWebMaterial",
        "parameters": [
          {
            "$ref": "#/components/parameters/taid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataTaRelatedWebMaterial"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/data/technology-assessment/related-medcac": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Retrieves TA Related MEDCAC.",
        "description": "Retrieves the MEDCAC related to a TA. The TA ID is required.",
        "operationId": "getDataTaRelatedMedcac",
        "parameters": [
          {
            "$ref": "#/components/parameters/taid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataTaRelatedMedcac"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },

    "/v1/metadata/contract-type/": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "Retrieves contract type information.",
        "description": "Retrieves all possible values for the contract type field. Not specifying the contract_type_id will return all contract types.",
        "operationId": "getMetadataContractType",
        "parameters": [
          {
            "$ref": "#/components/parameters/contract_type_id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataContractType"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/metadata/contract-subtype/": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "Retrieves subtype information.",
        "description": "Retrieves all possible values for the contract subtype field. Not specifying the subtype_id will return all contract subtypes (i.e., \"MAC - Part A\").",
        "operationId": "getMetadataContractSubtype",
        "parameters": [
          {
            "$ref": "#/components/parameters/subtype_id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataContractSubtype"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/metadata/license-agreement/": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "Retrieves a token that represents acceptance of the AMA/ADA/AHA license agreements.",
        "description": "Generates a new token, valid for one hour, that grants access to endpoints requiring acceptance of the AMA, ADA, and AHA license agreements. The token must be included in requests as a Bearer token.",
        "operationId": "getMetadatalicenseAgreement",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataLicenseAgreement"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/metadata/local-data-schedule/": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "Retrieves date information related to Local Coverage documents available via this API.",
        "description": "Retrieves the weekly batch date information related to Local Coverage documents available via the MCD and this API. The Local Coverage data available via this API is a snapshot in time. Data_captured_through indicates the latest possible date of the snapshot period (Sundays 11:59pm ET), inclusively. Refreshed_on_date indicates the Thursday date on which the snapshot was made available via the MCD and this API.",
        "operationId": "getMetadataLocalDataSchedule",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataLocalDataSchedule"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/metadata/states/": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "Retrieves state type information.",
        "description": "Retrieves possible values for the state_id field",
        "operationId": "getMetadataStateId",
        "parameters": [
          {
            "$ref": "#/components/parameters/state_id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataStateId"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/metadata/update-period/": {
      "get": {
        "tags": [
          "metadata"
        ],
        "summary": "Retrieves date information related to Local Coverage documents available via this API.",
        "description": "Retrieves the update period date information related to Local Coverage documents available via the MCD and this API.",
        "operationId": "getMetadataUpdatePeriod",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataUpdatePeriod"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },

    "/v1/reports/whats-new/national/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of recently published or updated National Coverage documents.",
        "description": "Retrieve updated National Coverage documents within the past number of days. For example, entering 21 will retrieve data within the last 21 days. If no number is specified, the default is for the past 30 days. The maximum number of days that can be included is 120. You can specify the document types using the following values: CAL, MCD, MEDCAC, NCA, NCD, TA. If no type is specified, all types will be included by default. To include multiple document types, separate them with commas.",
        "operationId": "getReportsWhatsNewNational",
        "parameters": [
          {
            "$ref": "#/components/parameters/document_type"
          },
          {
            "$ref": "#/components/parameters/timeframe"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsWhatsNewNational"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/reports/national-coverage-annual/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of National Coverage documents.",
        "description": "Retrieve a list of National Coverage documents. You can specify the year, and/or document type. You can specify the document type using the following values: CAL, NCA, NCD. If no type is specified, all types will be included by default. To include multiple document types, separate them with commas. If no year is specified, the current year will be included by default.",
        "operationId": "getReportsNationalCoverageAnnual",
        "parameters": [
          {
            "$ref": "#/components/parameters/document_type"
          },
          {
            "$ref": "#/components/parameters/year"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsNationalCoverageAnnual"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/reports/national-coverage-ncacal/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of National Coverage NCA/CALs.",
        "description": "Retrieve a list of National Coverage NCA/CAL documents based off status. Valid statuses are (Open, Closed, Open for Public Comment). If no status is specified, all statuses will be included by default. You can specify the document types using the following values: CAL, NCA. If no type is specified, all types will be included by default. To include multiple document types, separate them with commas.",
        "operationId": "getReportsNcaCalStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/document_type"
          },
          {
            "$ref": "#/components/parameters/status"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsNcaCalStatus"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/reports/national-coverage-ncd/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of National Coverage NCDs.",
        "description": "Retrieve a list of National Coverage NCD documents.",
        "operationId": "getReportsNationalCoverageNcd",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsNationalCoverageNcd"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/reports/national-coverage-medicare-coverage-documents/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of National Coverage Medicare Coverage Documents.",
        "description": "Retrieve a list of National Coverage Medicare Coverage documents.",
        "operationId": "getReportsNationalCoverageMedCovDoc",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsNationalCoverageMedCovDoc"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/reports/national-coverage-medcac-meetings/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of National Coverage MEDCAC meetings.",
        "description": "Retrieve a list of National Coverage MEDCAC meetings.",
        "operationId": "getReportsNationalCoverageMEDCAC",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsNationalCoverageMEDCAC"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/reports/national-coverage-technology-assessments/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of National Coverage Technology Assessments.",
        "description": "Retrieve a list of National Coverage Technology Assessments.",
        "operationId": "getReportsNationalCoverageTA",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsNationalCoverageTA"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/reports/whats-new/local/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of recently published or updated Local Coverage documents.",
        "description": "When specifying date ranges for the end point, keep in mind that Local Coverage data are published weekly. The selected date range entered for the end point cannot exceed one week of data. Additionally, the end date should not exceed 51 weeks from the current period's end date. The times for the start and end dates default to 12:00 AM EST. For a full week (7 days) of data, include the 8th day in your data range. For example, entering '20230701' as the start date and '20230708' as the end date will capture data for July 1, 2023, through July 7, 2023, with the end date stopping at 12:00 AM on July 8, 2023. July 8th data will not be included on the report. If no date range is specified, the latest update period will be used, which can be found on the MCD Help & Resources page in the MCD Data Schedule tile.",
        "operationId": "getReportsWhatsNewLocal",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractor_id"
          },
          {
            "$ref": "#/components/parameters/start_date"
          },
          {
            "$ref": "#/components/parameters/end_date"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsWhatsNewLocal"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/reports/local-coverage-final-lcds/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of Local Coverage Final LCDs.",
        "description": "Retrieves a list of Local Coverage Final LCDs. You can specify the contractor, state, and/or document status.  You can specify the status using the following values: A, R, F (Active, Retired, and Future Effective respectively). If no status is specified, all statuses will be included by default. To include multiple states, separate them with commas.",
        "operationId": "getReportsLocalCoverageFinalLcd",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractor_id"
          },
          {
            "$ref": "#/components/parameters/state_id"
          },
          {
            "$ref": "#/components/parameters/status"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsLocalCoverageFinalLcd"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/reports/local-coverage-proposed-lcds/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of Local Coverage Proposed LCDs.",
        "description": "Retrieves a list of Local Coverage Proposed LCDs. You can specify the contractor, state, and/or document status.  You can specify the status using the following values: C, E, F, A (In Comment, Comments Ended, In Notice, and Final Issued respectively). If no status is specified, all statuses will be included by default. To include multiple states, separate them with commas.",
        "operationId": "getReportsLocalCoverageProposedLcd",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractor_id"
          },
          {
            "$ref": "#/components/parameters/state_id"
          },
          {
            "$ref": "#/components/parameters/status"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsLocalCoverageProposedLcd"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/reports/local-coverage-articles/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of Local Coverage Articles.",
        "description": "Retrieves a list of Local Coverage Articles. You can specify the contractor, state, and/or document status. You can specify the status using the following values: A, R, F (Active, Retired, and Future Effective respectively). If no status is specified, all statuses will be included by default. To include multiple states, separate them with commas.",
        "operationId": "getReportsLocalCoverageArticle",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractor_id"
          },
          {
            "$ref": "#/components/parameters/state_id"
          },
          {
            "$ref": "#/components/parameters/status"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsLocalCoverageArticle"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/v1/reports/local-coverage-sad-exclusion-list/": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Retrieves list of Local Coverage Self-Administered Drug (SAD) Exclusion List Articles.",
        "description": "Retrieves a list of Local Coverage Self-Administered Drug (SAD) Exclusion List Articles. You can specify the date criteria option, start/end date, CPT/HCPCS code, and/or drug keyword. You can specify the date_option using the following values: \"current\", \"effect\", \"range\" (Currently in Effect, In Effect On, and In Effect Between). If no date_option is specified, Currently in Effect Articles will be included by default. If no start/end date is included, todays date will be used by default. To include multiple CPT/HCPCS codes, separate them with commas.",
        "operationId": "getReportsLocalCoverageSadExclusionList",
        "parameters": [
          {
            "$ref": "#/components/parameters/date_option"
          },
          {
            "$ref": "#/components/parameters/start_date"
          },
          {
            "$ref": "#/components/parameters/end_date"
          },
          {
            "$ref": "#/components/parameters/hcpcs_code"
          },
          {
            "$ref": "#/components/parameters/keyword"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/APISuccessHeader"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DataReportsLocalCoverageSadExclusionList"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "contractor_id": {
        "name": "contractor_id",
        "in": "query",
        "description": "ID value of the contractor requested.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "contractor_version": {
        "name": "contractor_version",
        "in": "query",
        "description": "Version number of the contractor requested.  Each contractor_id may have multiple related version numbers.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "contract_type_id": {
        "name": "contract_type_id",
        "in": "query",
        "description": "ID value of the contract type(s) requested.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "subtype_id": {
        "name": "subtype_id",
        "in": "query",
        "description": "ID value of the contract subtype(s) requested.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "state_id": {
        "name": "state_id",
        "in": "query",
        "description": "ID value of the state(s) requested.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "document_type": {
        "name": "document_type",
        "in": "query",
        "description": "Document type(s) (Case Sensitive).",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "timeframe": {
        "name": "timeframe",
        "in": "query",
        "description": "Number of days to be included.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "integer"
        }
      },
      "start_date": {
        "name": "start_date",
        "in": "query",
        "description": "Start date of the entities in the collection (greater than or equal to). Format: YYYYMMDD.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "end_date": {
        "name": "end_date",
        "in": "query",
        "description": "End date of the entities in the collection (less than or equal to). Format: YYYYMMDD.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "year": {
        "name": "year",
        "in": "query",
        "description": "The year of the document.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "integer"
        }
      },
      "status": {
        "name": "status",
        "in": "query",
        "description": "Value of the document status requested.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "lcdid": {
        "name": "lcdid",
        "in": "query",
        "description": "LCD Id",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "articleid": {
        "name": "articleid",
        "in": "query",
        "description": "Article Id",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "ver": {
        "name": "ver",
        "in": "query",
        "description": "Document Version",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "ncaid": {
        "name": "ncaid",
        "in": "query",
        "description": "ID Value of the NCA requested.",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "calid": {
        "name": "calid",
        "in": "query",
        "description": "ID Value of the CAL requested.",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "taid": {
        "name": "taid",
        "in": "query",
        "description": "TA Id",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "medcacid": {
        "name": "medcacid",
        "in": "query",
        "description": "MEDCAC Id",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "mcdid": {
        "name": "mcdid",
        "in": "query",
        "description": "ID Value of the Medicare Coverage Document requested.",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "ncdid": {
        "name": "ncdid",
        "in": "query",
        "description": "ID value of the NCD requested.",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "ncdver": {
        "name": "ncdver",
        "in": "query",
        "description": "Version number of the NCD requested.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "date_option": {
        "name": "date_option",
        "in": "query",
        "description": "Value of the date criteria option",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "hcpcs_code": {
        "name": "hcpcs_code",
        "in": "query",
        "description": "CPT/HCPCS Code(s)",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "keyword": {
        "name": "keyword",
        "in": "query",
        "description": "Drug keyword",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "APIError": {
        "type": "object",
        "required": [
          "message",
          "code"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "minimum": 100,
            "maximum": 600
          }
        }
      },
      "APISuccessHeader": {
        "type": "object",
        "properties": {
          "status": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "message": {
                "type": "string"
              }
            }
          },
          "notes": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DataReportsWhatsNewLocal": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "note": {
            "type": "string",
            "description": "Special note accompanying the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "contractor_name_type": {
            "type": "string",
            "description": "The name under which the contractor is “doing business” and Contract Type description of the contractor."
          },
          "updated_on": {
            "type": "string",
            "description": "Date the version was created (MM/DD/YYYY)"
          },
          "updated_on_sort": {
            "type": "string",
            "description": "Date the version was created (YYYYMMDDHHMMSS) used for sorting purposes."
          },
          "effective_date": {
            "type": "string",
            "description": "Effective date (MM/DD/YYYY)."
          },
          "retirement_date": {
            "type": "string",
            "description": "Retirement date (MM/DD/YYYY)."
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataReportsWhatsNewNational": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_status": {
            "type": "string",
            "description": "Status of the document."
          },
          "last_updated": {
            "type": "string",
            "description": "The date when the version was last updated (MM/DD/YYYY)"
          },
          "last_updated_sort": {
            "type": "string",
            "description": "The date when the version was last updated (YYYYMMDDHHMMSS) used for sorting"
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "whats_new_description": {
            "type": "string",
            "description": "Description of the changes in the document."
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataReportsNationalCoverageAnnual": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_status": {
            "type": "string",
            "description": "Status of the document."
          },
          "last_updated": {
            "type": "string",
            "description": "The date when the version was last updated (MM/DD/YYYY)"
          },
          "last_updated_sort": {
            "type": "string",
            "description": "The date when the version was last updated (YYYYMMDDHHMMSS) used for sorting"
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "review_type": {
            "type": "string",
            "description": "The type of review."
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataReportsNcaCalStatus": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_status": {
            "type": "string",
            "description": "Status of the document."
          },
          "public_comment": {
            "type": "string",
            "description": "Public Comment status of the document, where \"1\" is open for public comment"
          },
          "last_updated": {
            "type": "string",
            "description": "The date when the version was last updated (MM/DD/YYYY)"
          },
          "last_updated_sort": {
            "type": "string",
            "description": "The date when the version was last updated (YYYYMMDDHHMMSS) used for sorting"
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataReportsNationalCoverageNcd": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_status": {
            "type": "string",
            "description": "Status of the document."
          },
          "last_updated": {
            "type": "string",
            "description": "The date when the version was last updated (MM/DD/YYYY)"
          },
          "last_updated_sort": {
            "type": "string",
            "description": "The date when the version was last updated (YYYYMMDDHHMMSS) used for sorting"
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "chapter": {
            "type": "string",
            "description": "Chapter of the document."
          },
          "is_lab": {
            "type": "string",
            "description": "returns \"1\" if document is lab."
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataReportsNationalCoverageMedCovDoc": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_status": {
            "type": "string",
            "description": "Status of the document."
          },
          "last_updated": {
            "type": "string",
            "description": "The date when the version was last updated (MM/DD/YYYY)"
          },
          "last_updated_sort": {
            "type": "string",
            "description": "The date when the version was last updated (YYYYMMDDHHMMSS) used for sorting"
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "mc_document_type": {
            "type": "string",
            "description": "Description of the document type."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "status_display_order": {
            "type": "string",
            "description": "Display order of the status used for sorting."
          },
          "public_comment": {
            "type": "string",
            "description": "Public Comment status of the document, where \"1\" is open for public comment"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataReportsNationalCoverageMEDCAC": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "last_updated": {
            "type": "string",
            "description": "The date when the version was last updated (MM/DD/YYYY)"
          },
          "last_updated_sort": {
            "type": "string",
            "description": "The date when the version was last updated (YYYYMMDDHHMMSS) used for sorting"
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "medcac_date_sort": {
            "type": "string",
            "description": "The date of the MEDCAC Meeting (YYYYMMDDHHMMSS) used for sorting"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataReportsNationalCoverageTA": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "last_updated": {
            "type": "string",
            "description": "The date when the version was last updated (MM/DD/YYYY)"
          },
          "last_updated_sort": {
            "type": "string",
            "description": "The date when the version was last updated (YYYYMMDDHHMMSS) used for sorting"
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "year": {
            "type": "string",
            "description": "The year of the Technology Assessment."
          },
          "year_sort": {
            "type": "string",
            "description": "The year of the Technology Assessment used for sorting"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataReportsLocalCoverageFinalLcd": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "note": {
            "type": "string",
            "description": "Special note accompanying the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "contractor_name_type": {
            "type": "string",
            "description": "The name under which the contractor is “doing business” and Contract Type description of the contractor."
          },
          "updated_on": {
            "type": "string",
            "description": "Date the version was created (MM/DD/YYYY)"
          },
          "updated_on_sort": {
            "type": "string",
            "description": "Date the version was created (YYYYMMDDHHMMSS) used for sorting purposes."
          },
          "effective_date": {
            "type": "string",
            "description": "Effective date (MM/DD/YYYY)."
          },
          "retirement_date": {
            "type": "string",
            "description": "Retirement date (MM/DD/YYYY)."
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataReportsLocalCoverageProposedLcd": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "note": {
            "type": "string",
            "description": "Special note accompanying the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "contractor_name_type": {
            "type": "string",
            "description": "The name under which the contractor is “doing business” and Contract Type description of the contractor."
          },
          "updated_on": {
            "type": "string",
            "description": "Date the version was created (MM/DD/YYYY)"
          },
          "updated_on_sort": {
            "type": "string",
            "description": "Date the version was created (YYYYMMDDHHMMSS) used for sorting purposes."
          },
          "effective_date": {
            "type": "string",
            "description": "Effective date (MM/DD/YYYY)."
          },
          "retirement_date": {
            "type": "string",
            "description": "Retirement date (MM/DD/YYYY)."
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataReportsLocalCoverageArticle": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "note": {
            "type": "string",
            "description": "Special note accompanying the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "contractor_name_type": {
            "type": "string",
            "description": "The name under which the contractor is “doing business” and Contract Type description of the contractor."
          },
          "updated_on": {
            "type": "string",
            "description": "Date the version was created (MM/DD/YYYY)"
          },
          "updated_on_sort": {
            "type": "string",
            "description": "Date the version was created (YYYYMMDDHHMMSS) used for sorting purposes."
          },
          "effective_date": {
            "type": "string",
            "description": "Effective date (MM/DD/YYYY)."
          },
          "retirement_date": {
            "type": "string",
            "description": "Retirement date (MM/DD/YYYY)."
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },

      "DataArticle": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version number of the article."
          },
          "article_type": {
            "type": "integer",
            "description": "Article Type value"
          },
          "article_type_description": {
            "type": "string",
            "description": "Description for the Article type"
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "article_pub_date": {
            "type": "string",
            "description": "Publish date of the article (MM/DD/YYYY)"
          },
          "article_eff_date": {
            "type": "string",
            "description": "Date the article went into effect (MM/DD/YYYY)"
          },
          "article_end_date": {
            "type": "string",
            "description": "Date the article is no longer in effect (MM/DD/YYYY)"
          },
          "description": {
            "type": "string",
            "description": "Description of the article."
          },
          "other_comments": {
            "type": "string",
            "description": "Other comments."
          },
          "sad_url": {
            "type": "string",
            "description": "sad url)"
          },
          "thirty_percent": {
            "type": "string",
            "description": "The CPT/HCPCS master coding table currently contains both the long and short descriptions. The short description should be displayed for a CPT code if more than 30% of the CPT section codes are used in the article. Otherwise, the long CPT descriptions should be displayed. “Y” denotes “Yes, the short descriptions will display.” “U” denotes “Undefined” and “N” denotes “No”. For both U and N, the long descriptions will display."
          },
          "status": {
            "type": "string",
            "description": "Status of an Article version."
          },
          "last_updated": {
            "type": "string",
            "description": "Date the version was created (MM/DD/YYYY)"
          },
          "key_article": {
            "type": "string",
            "description": "key article"
          },
          "icd9_covered_para": {
            "type": "string",
            "description": "Description of the icd9 covered codes section."
          },
          "icd9_noncovered_para": {
            "type": "string",
            "description": "Description of the icd9 noncovered codes section"
          },
          "revenue_para": {
            "type": "string",
            "description": "Description of the revenue codes section"
          },
          "article_rev_end_Date": {
            "type": "string",
            "description": "Revision end date"
          },
          "source_article_id": {
            "type": "integer",
            "description": "Source Article ID"
          },
          "date_retired": {
            "type": "string",
            "description": "The date on which the LCD was retired (MM/DD/YYYY)"
          },
          "keywords": {
            "type": "string",
            "description": "A list of words that do not appear in the LCD that may be inportant for search purposes."
          },
          "icd10_doc": {
            "type": "string",
            "description": "Denotes whether an LCD has ICD-10-CM Codes or not."
          },
          "add_icd10_info": {
            "type": "string",
            "description": "Additional ICD-10-CM information."
          },
          "cms_cov_policy": {
            "type": "string",
            "description": "The CMS National Coverage Determination or Coverage Provision."
          },
          "display_id": {
            "type": "integer",
            "description": "Display ID of the document."
          },
          "reference_article": {
            "type": "string",
            "description": "LCD Reference Article"
          }
        }
      },
      "DataArticleFutureRetire": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "retire_dt": {
            "type": "string",
            "description": "Future date on which the Article will be retired (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleRelatedDocuments": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version number of the article."
          },
          "related_num": {
            "type": "integer",
            "description": "Document counter."
          },
          "r_article_id": {
            "type": "integer",
            "description": "Related Article ID."
          },
          "r_article_version": {
            "type": "integer",
            "description": "Related Article Version."
          },
          "r_lcd_id": {
            "type": "integer",
            "description": "Related LCD ID."
          },
          "r_lcd_version": {
            "type": "integer",
            "description": "Related LCD Version."
          },
          "r_contractor_id": {
            "type": "integer",
            "description": "The contractor of the related article."
          },
          "last_updated": {
            "type": "string",
            "description": "Date the related document was added to the LCD (MM/DD/YYYY)"
          },
          "url": {
            "type": "string",
            "description": "The URL to the document"
          }
        }
      },
      "DataArticleRelatedNcdDocuments": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version number of the article."
          },
          "related_num": {
            "type": "integer",
            "description": "Document counter."
          },
          "r_ncd_id": {
            "type": "integer",
            "description": "Related NCD ID."
          },
          "r_ncd_version": {
            "type": "integer",
            "description": "Related NCD Version."
          },
          "last_updated": {
            "type": "string",
            "description": "Date the related document was added to the Article (MM/DD/YYYY)"
          },
          "url": {
            "type": "string",
            "description": "The URL to the document"
          }
        }
      },
      "DataArticleRelatedSourceIcd9": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "related_num": {
            "type": "integer",
            "description": "Document counter."
          },
          "source_article_id": {
            "type": "integer",
            "description": "Original ICD-9 Document ID"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the related document was added to the Article (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleBillCodes": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "bill_code_id": {
            "type": "string",
            "description": "Bill Code ID"
          },
          "bill_code_version": {
            "type": "integer",
            "description": "Bill Code version."
          },
          "description": {
            "type": "string",
            "description": "Description of the bill code"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the bill code was added to the Article (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleCodeTable": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "article_type": {
            "type": "integer",
            "description": "Article Type value"
          },
          "article_type_description": {
            "type": "string",
            "description": "Description for the Article type"
          },
          "code_table_row": {
            "type": "integer",
            "description": "Row ID for the code table"
          },
          "brand_name": {
            "type": "string",
            "description": "Name of the brand"
          },
          "eff_date": {
            "type": "string",
            "description": "Effective date (MM/DD/YYYY)"
          },
          "end_date": {
            "type": "string",
            "description": "End of Effective date (MM/DD/YYYY)"
          },
          "comments": {
            "type": "string",
            "description": "Comments"
          },
          "hcpc_code_id": {
            "type": "string",
            "description": "HCPC Code ID"
          },
          "hcpc_code_version": {
            "type": "integer",
            "description": "HCPC Code version"
          },
          "long_description": {
            "type": "string",
            "description": "Long Description of the code"
          },
          "short_description": {
            "type": "string",
            "description": "Short Description of the code"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the code was added to the Article (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleContractor": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "article_type": {
            "type": "integer",
            "description": "ID of the article type"
          },
          "article_type_description": {
            "type": "string",
            "description": "Description of the article type"
          },
          "contractor_id": {
            "type": "integer",
            "description": "Contractor system identifier."
          },
          "contractor_type_id": {
            "type": "integer",
            "description": "Contractor type system identifier."
          },
          "contractor_version": {
            "type": "integer",
            "description": "Contractor version number."
          },
          "last_updated": {
            "type": "string",
            "description": "Date the contractor was added to the Article (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleHcpcCode": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "hcpc_code_id": {
            "type": "string",
            "description": "CPT/HCPCS code ID"
          },
          "hcpc_code_version": {
            "type": "integer",
            "description": "CPT/HCPCS code version"
          },
          "hcpc_code_group": {
            "type": "integer",
            "description": "ID for the section of CPT/HCPCS codes"
          },
          "long_description": {
            "type": "string",
            "description": "Long description of CPT/HCPCS codes"
          },
          "short_description": {
            "type": "string",
            "description": "Short description of CPT/HCPCS codes"
          },
          "range": {
            "type": "string",
            "description": "CPT/HCPCS range"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the CPT/HCPCS code was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleHcpcCodeGroup": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "hcpc_code_group": {
            "type": "integer",
            "description": "ID for the section of CPT/HCPCS codes"
          },
          "paragraph": {
            "type": "string",
            "description": "Description of the CPT/HCPCS code section"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the CPT/HCPCS code section was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleHcpcModifier": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "hcpc_modifier_code_id": {
            "type": "string",
            "description": "CPT/HCPCS Modifier code ID"
          },
          "hcpc_modifier_code_version": {
            "type": "integer",
            "description": "CPT/HCPCS Modifier code version"
          },
          "hcpc_modifier_group": {
            "type": "integer",
            "description": "ID for the section of CPT/HCPCS Modifier codes"
          },
          "description": {
            "type": "string",
            "description": "Description of CPT/HCPCS Modifier codes"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the CPT/HCPCS Modifier code was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleHcpcModifierGroup": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "hcpc_modifier_group": {
            "type": "integer",
            "description": "ID for the section of CPT/HCPCS Modifier codes"
          },
          "paragraph": {
            "type": "string",
            "description": "Description of the CPT/HCPCS Modifier code section"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the CPT/HCPCS Modifier code section was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleIcd10Covered": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "icd10_code_id": {
            "type": "string",
            "description": "ICD-10 code ID"
          },
          "icd10_code_version": {
            "type": "integer",
            "description": "ICD-10 code version"
          },
          "icd10_covered_group": {
            "type": "integer",
            "description": "ID for the section of ICD-10 Covered codes"
          },
          "range": {
            "type": "string",
            "description": "code range"
          },
          "sort_order": {
            "type": "integer",
            "description": "Display order the ICD-10 Codes"
          },
          "description": {
            "type": "string",
            "description": "Description of ICD-10 codes"
          },
          "asterisk": {
            "type": "string",
            "description": "ICD-10 Code Asterisk"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the ICD-10 Covered code was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleIcd10CoveredGroup": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "icd10_covered_group": {
            "type": "integer",
            "description": "ID for the section of ICD-10 Covered codes"
          },
          "paragraph": {
            "type": "string",
            "description": "Description of the ICD-10 Covered code section"
          },
          "icd10_covered_ast": {
            "type": "string",
            "description": "Asterisk for the ICD-10 Covered code section"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the ICD-10 code section was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleIcd10Noncovered": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "icd10_code_id": {
            "type": "string",
            "description": "ICD-10 code ID"
          },
          "icd10_code_version": {
            "type": "integer",
            "description": "ICD-10 code version"
          },
          "icd10_noncovered_group": {
            "type": "integer",
            "description": "ID for the section of ICD-10 Noncovered codes"
          },
          "range": {
            "type": "string",
            "description": "code range"
          },
          "sort_order": {
            "type": "integer",
            "description": "Display order the ICD-10 Codes"
          },
          "description": {
            "type": "string",
            "description": "Description of ICD-10 codes"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the ICD-10 Noncovered code was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleIcd10NoncoveredGroup": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "icd10_noncovered_group": {
            "type": "integer",
            "description": "ID for the section of ICD-10 Noncovered codes"
          },
          "paragraph": {
            "type": "string",
            "description": "Description of the ICD-10 Noncovered code section"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the ICD-10 code section was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleIcd10PcsCode": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "icd10_pcs_code_id": {
            "type": "string",
            "description": "ICD-10 PCS code ID"
          },
          "icd10_pcs_code_version": {
            "type": "integer",
            "description": "ICD-10 PCS code version"
          },
          "icd10_pcs_code_group": {
            "type": "integer",
            "description": "ID for the section of ICD-10 PCS codes"
          },
          "range": {
            "type": "string",
            "description": "code range"
          },
          "sort_order": {
            "type": "integer",
            "description": "Display order the ICD-10 Codes"
          },
          "description": {
            "type": "string",
            "description": "Description of ICD-10 codes"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the ICD-10 PCS code was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleIcd10PcsCodeGroup": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "icd10_pcs_code_group": {
            "type": "integer",
            "description": "ID for the section of ICD-10 PCS codes"
          },
          "paragraph": {
            "type": "string",
            "description": "Description of the ICD-10 PCS code section"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the ICD-10 PCS code section was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleOtherCodingGroup": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "other_coding_group": {
            "type": "integer",
            "description": "ID for the section of other codes"
          },
          "paragraph": {
            "type": "string",
            "description": "Description of the other code section"
          },
          "codes": {
            "type": "string",
            "description": "Codes listed in the other code section"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the other code section was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticlePrimaryJurisdiction": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "state_id": {
            "type": "integer",
            "description": "State system identifier"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the state was added to the Article (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleResponseComment": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "rtc_num": {
            "type": "integer",
            "description": "Response to Comment system identifier"
          },
          "comment": {
            "type": "string",
            "description": "Comment on the article"
          },
          "response": {
            "type": "string",
            "description": "Response to comment"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the Response to comment was added to the Article (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleRevenueCode": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "revenue_code_id": {
            "type": "string",
            "description": "Revenue code ID"
          },
          "revenue_code_version": {
            "type": "integer",
            "description": "Revenue code version"
          },
          "description": {
            "type": "string",
            "description": "Description of revenue codes"
          },
          "range": {
            "type": "string",
            "description": "code range"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the revenue code was added to the Article or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleRevisionHistory": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "rev_hist_num": {
            "type": "integer",
            "description": "Revision History number"
          },
          "rev_hist_date": {
            "type": "string",
            "description": "Revision history date (MM/DD/YYYY)"
          },
          "rev_hist_exp": {
            "type": "string",
            "description": "Revision history explanation"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the revision history information was added to the Article (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleStickyNote": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "sticky_note_version": {
            "type": "integer",
            "description": "Version number of the sticky note"
          },
          "sticky_note": {
            "type": "string",
            "description": "Sticky note text"
          },
          "sticky_note_dt": {
            "type": "string",
            "description": "Date this version of the sticky note was updated (MM/DD/YYYY)"
          },
          "sticky_note_posting_dt": {
            "type": "string",
            "description": "Date this version of the sticky note will be posted to the MCD (MM/DD/YYYY)"
          }
        }
      },
      "DataArticleUrls": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "integer",
            "description": "ID of the Article"
          },
          "article_version": {
            "type": "integer",
            "description": "Version of the Article"
          },
          "url_type_id": {
            "type": "integer",
            "description": "URL type system identifier"
          },
          "url_type_description": {
            "type": "string",
            "description": "Description of the URL type"
          },
          "url_id": {
            "type": "integer",
            "description": "URL system identifier"
          },
          "url": {
            "type": "string",
            "description": "The URL to the document"
          },
          "url_name": {
            "type": "string",
            "description": "The documents name"
          },
          "url_description": {
            "type": "string",
            "description": "The documents name"
          },
          "sort_order": {
            "type": "integer",
            "description": "The order in which the URLs should appear on the Article"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the revision history information was added to the Article (MM/DD/YYYY)"
          }
        }
      },

      "DataContractor": {
        "type": "object",
        "properties": {
          "contractor_id": {
            "type": "integer",
            "description": "ID of the contractor"
          },
          "contract_type_id": {
            "$ref": "#/components/schemas/FieldContractTypeId"
          },
          "subtype_id": {
            "$ref": "#/components/schemas/FieldSubtypeId"
          },
          "contractor_version": {
            "type": "integer",
            "description": "Version number of the contractor"
          },
          "contract_number": {
            "type": "string",
            "description": "Number of the contractor"
          },
          "contractor_name": {
            "type": "string",
            "description": "The name under which the contractor is \"doing business\""
          }
        }
      },

      "DataLcd": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version number of the LCD."
          },
          "display_id": {
            "type": "integer",
            "description": "Display ID of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "determination_number": {
            "type": "string",
            "description": "The unique determination identifier for an LCD as designated by the policy author."
          },
          "cms_cov_policy": {
            "type": "string",
            "description": "The CMS National Coverage Determination or Coverage Provision."
          },
          "orig_det_eff_date": {
            "type": "string",
            "description": "Date the determination originally went into effect, or will become effective (MM/DD/YYYY)"
          },
          "ent_det_end_date": {
            "type": "string",
            "description": "Date the determination ends or is no longer effective (MM/DD/YYYY)"
          },
          "rev_eff_date": {
            "type": "string",
            "description": "The date on which a particular revision of the determination went into effect or will become effective (MM/DD/YYYY)"
          },
          "rev_end_date": {
            "type": "string",
            "description": "The date on which a particular revision of the determination is no longer effective (MM/DD/YYYY)"
          },
          "indication": {
            "type": "string",
            "description": "The general indications for which an item, service, or procedure is covered and/or considered reasonable and necessary, and any limitations."
          },
          "diagnoses_support": {
            "type": "string",
            "description": "The medical diagnoses that support the medical necessity for the items, serices or procedures."
          },
          "icd9_dont_support_para": {
            "type": "string",
            "description": "The introductory paragraph associated with the ICD-9 diagnosis codes that do not support the medical necessity of the service."
          },
          "icd9_dont_support_ast": {
            "type": "string",
            "description": "The explanation supporting the asterisk (*) associated with the ICD-9 diagnosis codes that do not support the medical necessity of the service."
          },
          "diagnoses_dont_support": {
            "type": "string",
            "description": "The medical diagnoses that do not support the medical necessity for the items, services, or procedures."
          },
          "coding_guidelines": {
            "type": "string",
            "description": "The relationships between codes that define how services are billed."
          },
          "doc_reqs": {
            "type": "string",
            "description": "Specific information from the medical records or other pertinent information that would be required to justify the item or service."
          },
          "appendices": {
            "type": "string",
            "description": "A text narrative of appendices for the LCD."
          },
          "util_guide": {
            "type": "string",
            "description": "The information concerning the typical or expected utilization for the service."
          },
          "source_info": {
            "type": "string",
            "description": "The information sources, pertinent references and other clinical or scientific evidence reviewed in the development of this policy."
          },
          "adv_meeting": {
            "type": "string",
            "description": "The meeting date on which the policy was discussed with the advisory committee."
          },
          "comment_start_dt": {
            "type": "string",
            "description": "The date the LCD was released for comment (MM/DD/YYYY)."
          },
          "comment_end_dt": {
            "type": "string",
            "description": "The date the comment period ended (MM/DD/YYYY)."
          },
          "notice_start_dt": {
            "type": "string",
            "description": "The date the medical community was notified of the LCD."
          },
          "rev_hist_num": {
            "type": "string",
            "description": "The revision number created by a Contractor."
          },
          "history_exp": {
            "type": "string",
            "description": "An explanation of the revisions made to the policy."
          },
          "last_reviewed_on": {
            "type": "string",
            "description": "The date on which the policy was last reviewed on (MM/DD/YYYY)"
          },
          "thirty_percent": {
            "type": "string",
            "description": "The CPT/HCPCS master coding table currently contains both the long and short descriptions. The short description should be displayed for a CPT code if more than 30% of the CPT section codes are used in the LCD. Otherwise, the long CPT descriptions should be displayed. “Y” denotes “Yes, the short descriptions will display.” “U” denotes “Undefined” and “N” denotes “No”. For both U and N, the long descriptions will display."
          },
          "status": {
            "type": "string",
            "description": "Status of an LCD version."
          },
          "last_updated": {
            "type": "string",
            "description": "Date the version was created (MM/DD/YYYY)"
          },
          "draft_contact": {
            "type": "integer",
            "description": "The ID of the point-of-contact for the Propsed policy."
          },
          "revenue_para": {
            "type": "string",
            "description": "Description of the Revenue codes section."
          },
          "source_lcd_id": {
            "type": "integer",
            "description": "The LCD ID of the Original ICD-9 LCD that the ICD-10-CM LCD was based off of."
          },
          "add_icd10_info": {
            "type": "string",
            "description": "Additional ICD-10-CM information."
          },
          "keywords": {
            "type": "string",
            "description": "A list of words that do not appear in the LCD that may be inportant for search purposes."
          },
          "associated_info": {
            "type": "string",
            "description": "Any associated information about the LCD."
          },
          "notice_end_dt": {
            "type": "string",
            "description": "The end date of the notice period (MM/DD/YYYY)"
          },
          "date_retired": {
            "type": "string",
            "description": "The date on which the LCD was retired (MM/DD/YYYY)"
          },
          "draft_released_Date": {
            "type": "string",
            "description": "The date on which the Propsed LCD was released to a Final LCD (MM/DD/YYYY)"
          },
          "icd10_doc": {
            "type": "string",
            "description": "Denotes whether an LCD has ICD-10-CM Codes or not."
          },
          "synopsis_changes": {
            "type": "string",
            "description": "The synopsis of changes completed in the Proposed LCD."
          },
          "bibliography": {
            "type": "string",
            "description": "Contains a list of all evidentiary sources used to develop the coverage determination."
          },
          "summary_of_evidence": {
            "type": "string",
            "description": "Contains a summary of evidence reviewed to develop the coverage determination."
          },
          "analysis_of_evidence": {
            "type": "string",
            "description": "Contains the explanation of the rationale that supports the coverage determination."
          },
          "mcd_publish_date": {
            "type": "string",
            "description": "The date that the Proposed LCD was posted on the MCD (MM/DD/YYYY)"
          },
          "issue": {
            "type": "string",
            "description": "A summary for readers that describes the coverage topic"
          },
          "issue_change": {
            "type": "string",
            "description": "A summary for readers that describes what changed between the Issue as presented in the Proposed LCD, and how it ultimately was stated in the Final LCD."
          },
          "mac_initiated": {
            "type": "string",
            "description": "The organization(s) or person(s) who requested the LCD consideration/reconsideration."
          }
        }
      },
      "DataLcdRelatedDocuments": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version number of the LCD."
          },
          "related_num": {
            "type": "integer",
            "description": "Document counter."
          },
          "r_article_id": {
            "type": "integer",
            "description": "Related Article ID."
          },
          "r_article_version": {
            "type": "integer",
            "description": "Related Article Version."
          },
          "r_lcd_id": {
            "type": "integer",
            "description": "Related LCD ID."
          },
          "r_lcd_version": {
            "type": "integer",
            "description": "Related LCD Version."
          },
          "r_contractor_id": {
            "type": "integer",
            "description": "The contractor of the related article."
          },
          "last_updated": {
            "type": "string",
            "description": "Date the related document was added to the LCD (MM/DD/YYYY)"
          },
          "url": {
            "type": "string",
            "description": "The URL to the document"
          }
        }
      },
      "DataLcdRelatedNcdDocuments": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version number of the LCD."
          },
          "related_num": {
            "type": "integer",
            "description": "Document counter."
          },
          "r_ncd_id": {
            "type": "integer",
            "description": "Related NCD ID."
          },
          "r_ncd_version": {
            "type": "integer",
            "description": "Related NCD Version."
          },
          "last_updated": {
            "type": "string",
            "description": "Date the related document was added to the LCD (MM/DD/YYYY)"
          },
          "url": {
            "type": "string",
            "description": "The URL to the document"
          }
        }
      },
      "DataLcdFutureRetire": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "retire_dt": {
            "type": "string",
            "description": "Future date on which the LCD will be retired (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdRelatedSourceIcd9": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "related_num": {
            "type": "integer",
            "description": "Document counter."
          },
          "source_lcd_id": {
            "type": "integer",
            "description": "Original ICD-9 Document ID"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the related document was added to the LCD (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdAdvisoryCommittee": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "meeting_id": {
            "type": "integer",
            "description": "Meeting ID number."
          },
          "meeting_date": {
            "type": "string",
            "description": "Date of the meeting (MM/DD/YYYY)"
          },
          "meeting_info": {
            "type": "string",
            "description": "Any information from the meeting that pertains to the LCD"
          },
          "sort_order": {
            "type": "integer",
            "description": "Order in which the meetings are displayed."
          },
          "last_updated": {
            "type": "string",
            "description": "Date the advisory committee information was added to the LCD (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdContractor": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "contractor_id": {
            "type": "integer",
            "description": "Contractor system identifier."
          },
          "contractor_type_id": {
            "type": "integer",
            "description": "Contractor type system identifier."
          },
          "contractor_version": {
            "type": "integer",
            "description": "Contractor version number."
          },
          "last_updated": {
            "type": "string",
            "description": "Date the contractor was added to the LCD (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdHcpcCodeGroup": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "hcpc_code_group": {
            "type": "integer",
            "description": "ID for the section of CPT/HCPCS codes"
          },
          "paragraph": {
            "type": "string",
            "description": "Description of the CPT/HCPCS code section"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the CPT/HCPCS code section was added to the LCD or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdHcpcCode": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "hcpc_code_id": {
            "type": "string",
            "description": "CPT/HCPCS code ID"
          },
          "hcpc_code_version": {
            "type": "integer",
            "description": "CPT/HCPCS code version"
          },
          "hcpc_code_group": {
            "type": "integer",
            "description": "ID for the section of CPT/HCPCS codes"
          },
          "long_description": {
            "type": "string",
            "description": "Long description of CPT/HCPCS codes"
          },
          "short_description": {
            "type": "string",
            "description": "Short description of CPT/HCPCS codes"
          },
          "range": {
            "type": "string",
            "description": "CPT/HCPCS range"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the CPT/HCPCS code was added to the LCD or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdReasonChange": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "reason_change_id": {
            "type": "integer",
            "description": "Reason for change ID"
          },
          "reason_change_version": {
            "type": "integer",
            "description": "Reason for change version"
          },
          "description": {
            "type": "string",
            "description": "Reason for change description"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the reason for change was added to the LCD or modified (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdRequestorLetters": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "letter_id": {
            "type": "integer",
            "description": "Letter system identifier"
          },
          "requestor_name": {
            "type": "string",
            "description": "Requestor's name"
          },
          "letter_path": {
            "type": "string",
            "description": "Path to the Letter"
          },
          "size": {
            "type": "number",
            "description": "Size of the Letter"
          },
          "sort_order": {
            "type": "integer",
            "description": "The order in which the URLs are displayed"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the requestor letter information was added to the LCD (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdRevisionHistory": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "rev_hist_num": {
            "type": "integer",
            "description": "Revision History number"
          },
          "rev_hist_date": {
            "type": "string",
            "description": "Revision history date (MM/DD/YYYY)"
          },
          "rev_hist_exp": {
            "type": "string",
            "description": "Revision history explanation"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the revision history information was added to the LCD (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdStickyNote": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "sticky_note_version": {
            "type": "integer",
            "description": "Version number of the sticky note"
          },
          "sticky_note": {
            "type": "string",
            "description": "Sticky note text"
          },
          "sticky_note_dt": {
            "type": "string",
            "description": "Date this version of the sticky note was updated (MM/DD/YYYY)"
          },
          "sticky_note_posting_dt": {
            "type": "string",
            "description": "Date this version of the sticky note will be posted to the MCD (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdSynopsisChanges": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "synopsis_changes_field_id": {
            "type": "integer",
            "description": "Synopsis Changes Field ID"
          },
          "field_name": {
            "type": "string",
            "description": "The field name that was updated"
          },
          "field_anchor": {
            "type": "string",
            "description": "The anchor name of the field for linking"
          },
          "mcd_field_name": {
            "type": "string",
            "description": "The MCD field name that was updated"
          },
          "mcd_field_anchor": {
            "type": "string",
            "description": "the MCD anchor name of the field for linking"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the synopsis of changes field information was added to the LCD (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdUrls": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "url_type_id": {
            "type": "integer",
            "description": "URL type system identifier"
          },
          "url_type_description": {
            "type": "string",
            "description": "Description of the URL type"
          },
          "url_id": {
            "type": "integer",
            "description": "URL system identifier"
          },
          "url": {
            "type": "string",
            "description": "The URL to the document"
          },
          "url_name": {
            "type": "string",
            "description": "The documents name"
          },
          "url_description": {
            "type": "string",
            "description": "The documents name"
          },
          "sort_order": {
            "type": "integer",
            "description": "The order in which the URLs should appear on the LCD"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the revision history information was added to the LCD (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdPrimaryJurisdiction": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version of the LCD"
          },
          "state_id": {
            "type": "integer",
            "description": "State system identifier"
          },
          "last_updated": {
            "type": "string",
            "description": "Date the state was added to the LCD (MM/DD/YYYY)"
          }
        }
      },
      "DataLcdTrackingSheet": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version number of the LCD."
          },
          "display_id": {
            "type": "integer",
            "description": "Display ID of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "issue": {
            "type": "string",
            "description": "A summary for readers that describes the coverage topic"
          },
          "comment_start_dt": {
            "type": "string",
            "description": "The date the LCD was released for comment (MM/DD/YYYY)."
          },
          "comment_end_dt": {
            "type": "string",
            "description": "The date the comment period ended (MM/DD/YYYY)."
          },
          "draft_contact": {
            "type": "integer",
            "description": "The ID of the point-of-contact for the Propsed policy."
          },
          "mac_initiated": {
            "type": "string",
            "description": "The organization(s) or person(s) who requested the LCD consideration/reconsideration."
          },
          "mcd_publish_date": {
            "type": "string",
            "description": "The date that the Proposed LCD was posted on the MCD (MM/DD/YYYY)"
          },
          "issue_change": {
            "type": "string",
            "description": "A summary for readers that describes what changed between the Issue as presented in the Proposed LCD, and how it ultimately was stated in the Final LCD."
          },
          "approved_version": {
            "type": "integer",
            "description": "Version of the approved lcd"
          },
          "source_lcd_title": {
            "type": "string",
            "description": "Title of the Source LCD"
          },
          "notice_start_dt": {
            "type": "string",
            "description": "The date the medical community was notified of the LCD."
          },
          "notice_end_dt": {
            "type": "string",
            "description": "The end date of the notice period (MM/DD/YYYY)"
          },
          "rev_eff_date": {
            "type": "string",
            "description": "The date on which a particular revision of the determination went into effect or will become effective (MM/DD/YYYY)"
          },
          "latest_final_effective_date": {
            "type": "string",
            "description": "The latest final effective date (MM/DD/YYYY)"
          },
          "latest_approved_version": {
            "type": "integer",
            "description": "The latest approved version"
          },
          "num_prior_versions": {
            "type": "integer",
            "description": "The number of prior versions"
          },
          "ent_det_end_date": {
            "type": "string",
            "description": "Date the determination ends or is no longer effective (MM/DD/YYYY)"
          },
          "r_article_id": {
            "type": "integer",
            "description": "Related Article ID."
          },
          "r_article_version": {
            "type": "integer",
            "description": "Related Article Version."
          },
          "r_title": {
            "type": "string",
            "description": "Title of the Related article."
          },
          "r_display_id": {
            "type": "integer",
            "description": "Display ID of the Related article."
          },
          "r_article_type": {
            "type": "integer",
            "description": "Article Type of the Related article"
          },
          "r_article_type_description": {
            "type": "string",
            "description": "Description for the Article type of the related article"
          },
          "r_status": {
            "type": "string",
            "description": "Status of the related article"
          },
          "r_article_pub_date": {
            "type": "string",
            "description": "Publish Date of the related article."
          },
          "r_last_updated": {
            "type": "string",
            "description": "Date the related article was last updated (MM/DD/YYYY)"
          },
          "r_url": {
            "type": "string",
            "description": "URL/Endpoint Path to the related article"
          },
          "trackingSheetHistory": {
            "$ref": "#/components/schemas/TrackingSheetHistory"
          }
        }
      },
      "TrackingSheetHistory": {
        "type": "object",
        "properties": {
          "lcd_id": {
            "type": "integer",
            "description": "ID of the LCD"
          },
          "lcd_version": {
            "type": "integer",
            "description": "Version number of the LCD."
          },
          "display_id": {
            "type": "integer",
            "description": "Display ID of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "status": {
            "type": "string",
            "description": "Status of the Document version."
          },
          "icd10_doc": {
            "type": "string",
            "description": "Denotes whether an LCD has ICD-10-CM Codes or not."
          },
          "comment_start_dt": {
            "type": "string",
            "description": "The date the LCD was released for comment (MM/DD/YYYY)."
          },
          "comment_end_dt": {
            "type": "string",
            "description": "The date the comment period ended (MM/DD/YYYY)."
          },
          "in_archive": {
            "type": "string",
            "description": "Denotes whether the document is on the MCD-Archive ('Y') or the MCD ('N')"
          },
          "url": {
            "type": "string",
            "description": "The URL to the document"
          }
        }
      },
      "DataLcdAttachments": {
        "type": "object",
        "properties": {
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "file_name": {
            "type": "string",
            "description": "Filename of the LCD attachment."
          },
          "size": {
            "type": "string",
            "description": "Size of the LCD attachment."
          },
          "attach_date": {
            "type": "string",
            "description": "The date the attachment was added (MM/DD/YYYY)"
          },
          "file_url": {
            "type": "string",
            "description": "The URL to the attachment."
          },
          "comment_response": {
            "type": "string",
            "description": "A value of 'Y' indicates the attachment has a Comment and Response."
          }
        }
      },

      "FieldContractTypeId": {
        "type": "integer",
        "description": "ID of the contract type."
      },
      "FieldSubtypeId": {
        "type": "integer",
        "description": "ID of the subtype."
      },
      "FieldDocumentType": {
        "type": "string",
        "description": "ID of the document type."
      },
      "FieldTitle": {
        "type": "string",
        "description": "Title of the document."
      },
      "FieldDocumentID": {
        "type": "string",
        "description": "ID of the document."
      },
      "MetadataContractType": {
        "type": "object",
        "properties": {
          "contract_type_id": {
            "type": "integer",
            "description": "ID of the contract type."
          },
          "description": {
            "type": "string",
            "description": "Name of the contract type."
          }
        }
      },
      "MetadataContractSubtype": {
        "type": "object",
        "properties": {
          "subtype_id": {
            "type": "integer",
            "description": "ID of the contract subtype."
          },
          "description": {
            "type": "string",
            "description": "Name of the contract subtype."
          }
        }
      },
      "MetadataLicenseAgreement": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The token required to access endpoints after accepting the AMA/ADA/AHA license agreements. Must be used as a Bearer toekn in further requests."
          }
        }
      },
      "MetadataLocalDataSchedule": {
        "type": "object",
        "properties": {
          "data_captured_through": {
            "type": "string",
            "description": "Data captured through indicates the latest possible date of the snapshot period (Sundays 11:59pm ET), inclusively. Format: YYYYMMDD."
          },
          "refreshed_on_date": {
            "type": "string",
            "description": "Refreshed on date indicates the Thursday date on which the snapshot was made available via the MCD and this API. Format: YYYYMMDD."
          }
        }
      },
      "MetadataStateId": {
        "type": "object",
        "properties": {
          "state_id": {
            "type": "integer",
            "description": "ID of the state."
          },
          "description": {
            "type": "string",
            "description": "Name of the state."
          }
        }
      },
      "MetadataUpdatePeriod": {
        "type": "object",
        "properties": {
          "period_id": {
            "type": "integer",
            "description": "ID of the update period"
          },
          "begin_date": {
            "type": "string",
            "description": "Begin date indicates the start date in which the snapshot was captured. Format: YYYYMMDD."
          },
          "end_date": {
            "type": "string",
            "description": "End date indicates the end date in which the snapshot was captured. Format: YYYYMMDD."
          }
        }
      },

      "DataNca": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_status": {
            "type": "string",
            "description": "Status of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "current_contact_name": {
            "type": "string",
            "description": "Current Contact Name"
          },
          "current_contact_phone": {
            "type": "string",
            "description": "Current Contact Phone"
          },
          "current_contact_email": {
            "type": "string",
            "description": "Current Contact Email"
          },
          "primary_medical_officer_name": {
            "type": "string",
            "description": "Lead Medical Officer Name"
          },
          "primary_medical_officer_phone": {
            "type": "string",
            "description": "Lead Medical Officer Phone"
          },
          "primary_medical_officer_email": {
            "type": "string",
            "description": "Lead Medical Officer Email"
          },
          "secondary_medical_officer_name": {
            "type": "string",
            "description": "Secondary Medical Officer Name"
          },
          "secondary_medical_officer_phone": {
            "type": "string",
            "description": "Secondary Medical Officer Phone"
          },
          "secondary_medical_officer_email": {
            "type": "string",
            "description": "Secondary Medical Officer Email"
          },
          "primary_analyst_name": {
            "type": "string",
            "description": "Lead Analyst Name"
          },
          "primary_analyst_phone": {
            "type": "string",
            "description": "Lead Analyst Phone"
          },
          "primary_analyst_email": {
            "type": "string",
            "description": "Lead Analyst Email"
          },
          "secondary_analyst_name": {
            "type": "string",
            "description": "Secondary Analyst Name"
          },
          "secondary_analyst_phone": {
            "type": "string",
            "description": "Secondary Analyst Phone"
          },
          "secondary_analyst_email": {
            "type": "string",
            "description": "Secondary Analyst Email"
          },
          "last_updated": {
            "type": "string",
            "description": "The date when the version was last updated (MM/DD/YYYY)"
          }
        }
      },
      "DataNcaTrackingSheet": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_status": {
            "type": "string",
            "description": "Status of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "issue": {
            "type": "string",
            "description": "NCA issue"
          },
          "benefit_category": {
            "type": "string",
            "description": "Benefit Category"
          },
          "requestor_information": {
            "$ref": "#/components/schemas/RequestorInformation"
          },
          "formal_request_date": {
            "type": "string",
            "description": "Formal Request Date (MM/DD/YYYY)"
          },
          "expected_completion_date": {
            "type": "string",
            "description": "Expected Completion Date (MM/DD/YYYY)"
          },
          "public_comment_start_date": {
            "type": "string",
            "description": "Public Comment Start Date (MM/DD/YYYY)"
          },
          "public_comment_end_date": {
            "type": "string",
            "description": "Public Comment End Date (MM/DD/YYYY)"
          },
          "public_comment_period_comment": {
            "type": "string",
            "description": "Public Comment Period Comments"
          },
          "proposed_decision_memo_due_date": {
            "type": "string",
            "description": "Proposed Decision Memo Due Date (MM/DD/YYYY)"
          },
          "proposed_decision_memo_date": {
            "type": "string",
            "description": "Proposed Decision Memo Date"
          },
          "proposed_public_comment_start_date": {
            "type": "string",
            "description": "Proposed Public Comment Start Date (MM/DD/YYYY)"
          },
          "proposed_public_comment_end_date": {
            "type": "string",
            "description": "Proposed Public Comment End Date (MM/DD/YYYY)"
          },
          "proposed_public_comment_period_comment": {
            "type": "string",
            "description": "Proposed Public Comment Period comments"
          },
          "decision_memo_date": {
            "type": "string",
            "description": "Decision Memo Date (MM/DD/YYYY)"
          },
          "primary_medical_officer_name": {
            "type": "string",
            "description": "Lead Medical Officer Name"
          },
          "primary_medical_officer_phone": {
            "type": "string",
            "description": "Lead Medical Officer Phone"
          },
          "primary_medical_officer_email": {
            "type": "string",
            "description": "Lead Medical Officer Email"
          },
          "secondary_medical_officer_name": {
            "type": "string",
            "description": "Secondary Medical Officer Name"
          },
          "secondary_medical_officer_phone": {
            "type": "string",
            "description": "Secondary Medical Officer Phone"
          },
          "secondary_medical_officer_email": {
            "type": "string",
            "description": "Secondary Medical Officer Email"
          },
          "primary_analyst_name": {
            "type": "string",
            "description": "Lead Analyst Name"
          },
          "primary_analyst_phone": {
            "type": "string",
            "description": "Lead Analyst Phone"
          },
          "primary_analyst_email": {
            "type": "string",
            "description": "Lead Analyst Email"
          },
          "secondary_analyst_name": {
            "type": "string",
            "description": "Secondary Analyst Name"
          },
          "secondary_analyst_phone": {
            "type": "string",
            "description": "Secondary Analyst Phone"
          },
          "secondary_analyst_email": {
            "type": "string",
            "description": "Secondary Analyst Email"
          },
          "benefit_category_determination_date": {
            "type": "string",
            "description": "Benefit Category Determination Date (MM/DD/YYYY)"
          },
          "benefit_category_determination_filename": {
            "type": "string",
            "description": "Benefit Categeory Determination File"
          },
          "action_taken": {
            "type": "string",
            "description": "Action Taken"
          }
        }
      },
      "RequestorInformation": {
        "type": "object",
        "properties": {
          "requestor": {
            "type": "string",
            "description": "Requestor for the NCA/CAL"
          },
          "requestor_letter": {
            "type": "string",
            "description": "Requestor letter for the NCA/CAL."
          }
        }
      },
      "DataNcaRelatedNcd": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "section": {
            "type": "string",
            "description": "NCD Manual Section Number"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataNcaRelatedMedCac": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "medcac_date": {
            "type": "string",
            "description": "Date of the MEDCAC meeting (MM/DD/YYYY)"
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataNcaRelatedTa": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataNcaHistory": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataNcaRelatedComments": {
        "type": "object",
        "properties": {
          "comment_id": {
            "type": "integer",
            "description": "ID of the comment"
          },
          "last_name": {
            "type": "string",
            "description": "Last Name"
          },
          "first_name": {
            "type": "string",
            "description": "First Name"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "organization": {
            "type": "string",
            "description": "Organization"
          },
          "comment_date": {
            "type": "string",
            "description": "Comment Date"
          },
          "comment": {
            "type": "string",
            "description": "Comment"
          }
        }
      },

      "DataCal": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_status": {
            "type": "string",
            "description": "Status of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "current_contact_name": {
            "type": "string",
            "description": "Current Contact Name"
          },
          "current_contact_phone": {
            "type": "string",
            "description": "Current Contact Phone"
          },
          "current_contact_email": {
            "type": "string",
            "description": "Current Contact Email"
          },
          "primary_medical_officer_name": {
            "type": "string",
            "description": "Lead Medical Officer Name"
          },
          "primary_medical_officer_phone": {
            "type": "string",
            "description": "Lead Medical Officer Phone"
          },
          "primary_medical_officer_email": {
            "type": "string",
            "description": "Lead Medical Officer Email"
          },
          "secondary_medical_officer_name": {
            "type": "string",
            "description": "Secondary Medical Officer Name"
          },
          "secondary_medical_officer_phone": {
            "type": "string",
            "description": "Secondary Medical Officer Phone"
          },
          "secondary_medical_officer_email": {
            "type": "string",
            "description": "Secondary Medical Officer Email"
          },
          "primary_analyst_name": {
            "type": "string",
            "description": "Lead Analyst Name"
          },
          "primary_analyst_phone": {
            "type": "string",
            "description": "Lead Analyst Phone"
          },
          "primary_analyst_email": {
            "type": "string",
            "description": "Lead Analyst Email"
          },
          "secondary_analyst_name": {
            "type": "string",
            "description": "Secondary Analyst Name"
          },
          "secondary_analyst_phone": {
            "type": "string",
            "description": "Secondary Analyst Phone"
          },
          "secondary_analyst_email": {
            "type": "string",
            "description": "Secondary Analyst Email"
          },
          "last_updated": {
            "type": "string",
            "description": "The date when the version was last updated (MM/DD/YYYY)"
          }
        }
      },
      "DataCalTrackingSheet": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_status": {
            "type": "string",
            "description": "Status of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "issue": {
            "type": "string",
            "description": "CAL issue"
          },
          "benefit_category": {
            "type": "string",
            "description": "Benefit Category"
          },
          "requestor_information": {
            "$ref": "#/components/schemas/RequestorInformation"
          },
          "formal_request_date": {
            "type": "string",
            "description": "Formal Request Date (MM/DD/YYYY)"
          },
          "expected_completion_date": {
            "type": "string",
            "description": "Expected Completion Date (MM/DD/YYYY)"
          },
          "public_comment_start_date": {
            "type": "string",
            "description": "Public Comment Start Date (MM/DD/YYYY)"
          },
          "public_comment_end_date": {
            "type": "string",
            "description": "Public Comment End Date (MM/DD/YYYY)"
          },
          "public_comment_period_comment": {
            "type": "string",
            "description": "Public Comment Period Comments"
          },
          "proposed_decision_memo_due_date": {
            "type": "string",
            "description": "Proposed Decision Memo Due Date (MM/DD/YYYY)"
          },
          "proposed_decision_memo_date": {
            "type": "string",
            "description": "Proposed Decision Memo Date"
          },
          "proposed_public_comment_start_date": {
            "type": "string",
            "description": "Proposed Public Comment Start Date (MM/DD/YYYY)"
          },
          "proposed_public_comment_end_date": {
            "type": "string",
            "description": "Proposed Public Comment End Date (MM/DD/YYYY)"
          },
          "proposed_public_comment_period_comment": {
            "type": "string",
            "description": "Proposed Public Comment Period comments"
          },
          "decision_memo_date": {
            "type": "string",
            "description": "Decision Memo Date (MM/DD/YYYY)"
          },
          "primary_medical_officer_name": {
            "type": "string",
            "description": "Lead Medical Officer Name"
          },
          "primary_medical_officer_phone": {
            "type": "string",
            "description": "Lead Medical Officer Phone"
          },
          "primary_medical_officer_email": {
            "type": "string",
            "description": "Lead Medical Officer Email"
          },
          "secondary_medical_officer_name": {
            "type": "string",
            "description": "Secondary Medical Officer Name"
          },
          "secondary_medical_officer_phone": {
            "type": "string",
            "description": "Secondary Medical Officer Phone"
          },
          "secondary_medical_officer_email": {
            "type": "string",
            "description": "Secondary Medical Officer Email"
          },
          "primary_analyst_name": {
            "type": "string",
            "description": "Lead Analyst Name"
          },
          "primary_analyst_phone": {
            "type": "string",
            "description": "Lead Analyst Phone"
          },
          "primary_analyst_email": {
            "type": "string",
            "description": "Lead Analyst Email"
          },
          "secondary_analyst_name": {
            "type": "string",
            "description": "Secondary Analyst Name"
          },
          "secondary_analyst_phone": {
            "type": "string",
            "description": "Secondary Analyst Phone"
          },
          "secondary_analyst_email": {
            "type": "string",
            "description": "Secondary Analyst Email"
          },
          "benefit_category_determination_date": {
            "type": "string",
            "description": "Benefit Category Determination Date (MM/DD/YYYY)"
          },
          "benefit_category_determination_filename": {
            "type": "string",
            "description": "Benefit Categeory Determination File"
          },
          "action_taken": {
            "type": "string",
            "description": "Action Taken"
          }
        }
      },
      "DataCalRelatedNcd": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "section": {
            "type": "string",
            "description": "NCD Manual Section Number"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataCalRelatedMedCac": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "medcac_date": {
            "type": "string",
            "description": "Date of the MEDCAC meeting (MM/DD/YYYY)"
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataCalRelatedTa": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataCalHistory": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataCalRelatedComments": {
        "type": "object",
        "properties": {
          "comment_id": {
            "type": "integer",
            "description": "ID of the comment"
          },
          "last_name": {
            "type": "string",
            "description": "Last Name"
          },
          "first_name": {
            "type": "string",
            "description": "First Name"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "organization": {
            "type": "string",
            "description": "Organization"
          },
          "comment_date": {
            "type": "string",
            "description": "Comment Date"
          },
          "comment": {
            "type": "string",
            "description": "Comment"
          }
        }
      },

      "DataTechnologyAssessment": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the TA."
          },
          "id": {
            "type": "integer",
            "description": "ID of the TA."
          },
          "issue": {
            "type": "string",
            "description": "Issue of the TA."
          },
          "assessment_file_name": {
            "type": "string",
            "description": "Assessment File name of the TA"
          },
          "ta": {
            "type": "string",
            "description": "Technology Assessment"
          },
          "question_file_name": {
            "type": "string",
            "description": "Question File Name."
          },
          "question": {
            "type": "string",
            "description": "Question"
          },
          "other_material_file_name": {
            "type": "string",
            "description": "Other Material File Name"
          },
          "last_updated": {
            "type": "string",
            "description": "Last Updated (MM/DD/YYYY)"
          }
        }
      },
      "DataTaRelatedNca": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "document_version": {
            "type": "integer",
            "description": "Version of the Document"
          },
          "title": {
            "type": "string",
            "description": "Title of the NCA"
          },
          "review_tracking_number": {
            "type": "string",
            "description": "Tracking number of the NCA"
          },
          "review_type": {
            "type": "string",
            "description": "Review type of the NCA"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataTaRelatedMaterial": {
        "type": "object",
        "properties": {
          "material_id": {
            "type": "integer",
            "description": "ID of the Material"
          },
          "material_file_name": {
            "type": "string",
            "description": "File name of the material"
          },
          "material_title": {
            "type": "string",
            "description": "Title of the Material"
          }
        }
      },
      "DataTaRelatedWebMaterial": {
        "type": "object",
        "properties": {
          "material_id": {
            "type": "integer",
            "description": "ID of the Material"
          },
          "material": {
            "type": "string",
            "description": "The material"
          },
          "material_title": {
            "type": "string",
            "description": "Title of the Material"
          }
        }
      },
      "DataTaRelatedMedcac": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "medcac_date": {
            "type": "string",
            "description": "Date of the MEDCAC meeting (MM/DD/YYYY)"
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },

      "DataMedcacMeeting": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "medcac_date": {
            "type": "string",
            "description": "Date of the MEDCAC meeting (MM/DD/YYYY)"
          },
          "issue": {
            "type": "string",
            "description": "MEDCAC meeting issue"
          },
          "action": {
            "type": "string",
            "description": "MEDCAC meeting action"
          },
          "fr_notice_file_name": {
            "type": "string",
            "description": "File name of the Federal Register Notice"
          },
          "agenda_file_name": {
            "type": "string",
            "description": "File name of the Agenda"
          },
          "agenda": {
            "type": "string",
            "description": "MEDCAC meeting agenda"
          },
          "minutes_file_name": {
            "type": "string",
            "description": "File name of the MEDCAC meeting minutes"
          },
          "minutes": {
            "type": "string",
            "description": "MEDCAC meeting minutes"
          },
          "transcript_file_name": {
            "type": "string",
            "description": "File name of the transcript"
          },
          "qa_file_name": {
            "type": "string",
            "description": "File name of the MEDCAC meeting panel questions"
          },
          "panel_voting_questions": {
            "type": "string",
            "description": "MEDCAC meeting panel voting questions"
          },
          "other_meeting_material_file_name": {
            "type": "string",
            "description": "File name of the other meeting material"
          },
          "first_contact_name": {
            "type": "string",
            "description": "First contact name"
          },
          "first_contact_phone": {
            "type": "string",
            "description": "First contact phone"
          },
          "first_contact_email": {
            "type": "string",
            "description": "First contact email"
          },
          "second_contact_name": {
            "type": "string",
            "description": "Second contact name"
          },
          "second_contact_phone": {
            "type": "string",
            "description": "Second contact phone"
          },
          "second_contact_email": {
            "type": "string",
            "description": "Second contact email"
          },
          "last_updated": {
            "type": "string",
            "description": "Last updated date (MM/DD/YYYY)"
          }
        }
      },
      "DataMedcacRelatedMaterial": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "material_id": {
            "type": "integer",
            "description": "ID of the related material."
          },
          "material_filename": {
            "type": "string",
            "description": "File name of the related material"
          },
          "material_title": {
            "type": "string",
            "description": "Title of the related material"
          }
        }
      },
      "DataMedcacRelatedEwebMaterial": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "material_id": {
            "type": "integer",
            "description": "ID of the related material."
          },
          "material": {
            "type": "string",
            "description": "Description of the MEDCAC Meeting related material"
          },
          "material_title": {
            "type": "string",
            "description": "Title of the related material"
          }
        }
      },
      "DataMedcacRelatedNca": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "review_tracking_number": {
            "type": "string",
            "description": "Tracking number of the NCA"
          },
          "review_type": {
            "type": "string",
            "description": "Review type of the NCA"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataMedcacRelatedTa": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },

      "DataMedCovDoc": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "integer",
            "description": "ID of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "doc_type_id": {
            "type": "integer",
            "description": "ID of the document type."
          },
          "doc_type_description": {
            "type": "string",
            "description": "Description of the document type"
          },
          "doc_text": {
            "type": "string",
            "description": "Text of the document"
          },
          "doc_filename": {
            "type": "string",
            "description": "Filename of the document"
          },
          "first_analyst_name": {
            "type": "string",
            "description": "First Analyst Name"
          },
          "first_analyst_phone": {
            "type": "string",
            "description": "First Analyst Phone"
          },
          "first_analyst_email": {
            "type": "string",
            "description": "First Analyst Email"
          },
          "second_analyst_name": {
            "type": "string",
            "description": "Second Analyst Name"
          },
          "second_analyst_phone": {
            "type": "string",
            "description": "Second Analyst Phone"
          },
          "second_analyst_email": {
            "type": "string",
            "description": "Second Analyst Email"
          },
          "release_date": {
            "type": "string",
            "description": "Date the document was released on the MCD"
          },
          "comment_start_date": {
            "type": "string",
            "description": "Comment period start date"
          },
          "comment_end_date": {
            "type": "string",
            "description": "Comment period end date"
          },
          "last_updated": {
            "type": "string",
            "description": "The date when the version was last updated (MM/DD/YYYY)"
          },
          "additional_material_title": {
            "type": "string",
            "description": "Additional material title"
          },
          "additional_material_filename": {
            "type": "string",
            "description": "Addidtional material file name"
          }
        }
      },
      "DataMedCovDocRelatedComments": {
        "type": "object",
        "properties": {
          "comment_id": {
            "type": "integer",
            "description": "ID of the comment"
          },
          "last_name": {
            "type": "string",
            "description": "Last Name"
          },
          "first_name": {
            "type": "string",
            "description": "First Name"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "organization": {
            "type": "string",
            "description": "Organization"
          },
          "comment_date": {
            "type": "string",
            "description": "Comment Date"
          },
          "comment": {
            "type": "string",
            "description": "Comment"
          }
        }
      },

      "DataNcd": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "publication_number": {
            "type": "string",
            "description": "publication_number"
          },
          "effective_date": {
            "type": "string",
            "description": "effective_date"
          },
          "effective_end_date": {
            "type": "string",
            "description": "effective_end_date"
          },
          "implementation_date": {
            "type": "string",
            "description": "implementation_date"
          },
          "qr_modifier_date": {
            "type": "string",
            "description": "qr_modifier_date"
          },
          "benefit_category": {
            "type": "string",
            "description": "benefit_category"
          },
          "item_service_description": {
            "type": "string",
            "description": "item_service_description"
          },
          "indications_limitations": {
            "type": "string",
            "description": "indications_limitations"
          },
          "cross_reference": {
            "type": "string",
            "description": "cross_reference"
          },
          "transmittal_number": {
            "type": "string",
            "description": "transmittal_number"
          },
          "transmittal_url": {
            "type": "string",
            "description": "transmittal_url"
          },
          "revision_history": {
            "type": "string",
            "description": "revision_history"
          },
          "other_text": {
            "type": "string",
            "description": "other_text"
          },
          "ama_statement": {
            "type": "string",
            "description": "ama_statement"
          },
          "reasons_for_denial": {
            "type": "string",
            "description": "reasons_for_denial"
          }


        }
      },
      "DataNcdRelatedNca": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "review_tracking_number": {
            "type": "string",
            "description": "Tracking number of the NCA"
          },
          "review_type": {
            "type": "string",
            "description": "Review type of the NCA"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataNcdRelatedCal": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "review_tracking_number": {
            "type": "string",
            "description": "Tracking number of the CAL"
          },
          "review_type": {
            "type": "string",
            "description": "Review type of the CAL"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },
      "DataNcdRelatedCpi": {
        "type": "object",
        "properties": {
          "cpi_title": {
            "type": "string",
            "description": "Title of the CPI."
          },
          "cpi_file_name": {
            "type": "string",
            "description": "CPI File"
          }
        }
      },
      "DataNcdOtherVersions": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "string",
            "description": "Version number of the document."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "section": {
            "type": "string",
            "description": "NCD Manual Section Number"
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      },

      "DataReportsLocalCoverageSadExclusionList": {
        "type": "object",
        "properties": {
          "document_id": {
            "$ref": "#/components/schemas/FieldDocumentID"
          },
          "document_version": {
            "type": "integer",
            "description": "Version number of the document."
          },
          "document_display_id": {
            "type": "string",
            "description": "Display ID of the document."
          },
          "document_type": {
            "$ref": "#/components/schemas/FieldDocumentType"
          },
          "code_id": {
            "type": "string",
            "description": "ID of the CPT/HCPCS Code."
          },
          "code_id_sort": {
            "type": "string",
            "description": "ID of the CPT/HCPCS Code used for sorting purposes."
          },
          "code_description": {
            "type": "string",
            "description": "Description of the CPT/HCPCS code."
          },
          "drug_brand_name": {
            "type": "string",
            "description": "Name of the drug brand."
          },
          "title": {
            "$ref": "#/components/schemas/FieldTitle"
          },
          "contractor_name_type": {
            "type": "string",
            "description": "The name under which the contractor is doing \"business\" and Contract Type description of the contractor."
          },
          "updated_on": {
            "type": "string",
            "description": "Date the version was created (MM/DD/YYYY)"
          },
          "updated_on_sort": {
            "type": "string",
            "description": "Date the version was created (YYYYMMDDHHMMSS) used for sorting purposes."
          },
          "effective_date": {
            "type": "string",
            "description": "Effective date (MM/DD/YYYY)."
          },
          "retirement_date": {
            "type": "string",
            "description": "Retirement date (MM/DD/YYYY)."
          },
          "url": {
            "type": "string",
            "description": "URL of the document on the MCD website."
          }
        }
      }
    },
    "responses": {
      "Error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/APIError"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}